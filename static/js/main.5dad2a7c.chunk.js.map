{"version":3,"sources":["assets/Format.png","style.js","views/compile.js","views/compare.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","grow","flexGrow","linkContainer","display","link","margin","padding","backgroundColor","color","textDecoration","borderRadius","transition","textTransform","fontSize","fontWeight","root","marginTop","justifyContent","alignItems","flexDirection","height","label","paddingTop","paddingBottom","inputWrapper","input","download","width","border","fileUploadContainer","fileUploadWrapper","flex","fileUpload","Compile","useState","fileA","setFileA","fileB","setFileB","q","setQs","setTitleColumn","classes","onFileChange","e","isFirstFile","preventDefault","f","target","files","reader","FileReader","onload","data","renderedData","XLSX","type","dataParse","sheet_to_json","Sheets","SheetNames","header","i","length","key","parseInt","fileDict","partName","priceQuantity","j","quantity","value","undefined","excelReader","result","readAsBinaryString","className","style","marginBottom","Input","onChange","event","disabled","Object","keys","map","paddingRight","mult","tmp","JSON","parse","stringify","toString","parseFloat","updateMultiplier","onClick","fileAKeys","fileBKeys","combined","concat","uniqueItems","Set","quantities","individualItemPrice","A","B","wbData","myHeader","pl","push","rowData","priceList","quantityArr","priceArr","values","isNaN","wb","json_to_sheet","excelBuffer","bookType","dd","Blob","FileSaver","downloadFile","alt","src","require","Compare","EURO","USD","exchange","setExchange","stock","fileNo","handlingCharge","markUp","mpn","brand","qty","remarks","parseStockAvailbleFile","opoCurr","opoPrice","opoDate","excelDateToJSDate","getTime","parseOpenPoPriceList","grCurr","grPrice","grDate","parseGoodsReceivedPriceList","serial","utc_days","Math","floor","date_info","Date","getFullYear","getMonth","getDate","workbookRows","mpns","row","grPriceUSD","opoPriceUSD","highestPrice","unitPrice","console","log","App","AppBar","position","Toolbar","Typography","noWrap","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5dad2a7c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Format.8dacd377.png\";","import { makeStyles, colors } from '@material-ui/core'\r\n\r\nexport const useStyles = makeStyles({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    linkContainer: {\r\n        display: 'flex'\r\n    },\r\n    link: {\r\n        margin: '5px',\r\n        padding: '10px 20px 10px 20px',\r\n        backgroundColor: '#f8f8f8',\r\n        color: '#434343',\r\n        textDecoration: 'none',\r\n        borderRadius: '5px',\r\n        transition: '0.5s',\r\n        textTransform: 'uppercase',\r\n        fontSize: '1em',\r\n        fontWeight: 'bold',\r\n\r\n        '&:hover': {\r\n            backgroundColor: '#d5d5d5',\r\n            transition: '0.5s',\r\n        },\r\n    },\r\n\r\n    root: {\r\n        marginTop: '50px',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n    },\r\n    label: {\r\n        fontWeight: 'bold',\r\n        fontSize: '20px',\r\n        paddingTop: '5px',\r\n        paddingBottom: '5px',\r\n    },\r\n    inputWrapper: {\r\n        margin: '20px 0px'\r\n    },\r\n    input: {\r\n        padding: '5px'\r\n    },\r\n\r\n    download: {\r\n        backgroundColor: 'darkorange',\r\n        color: 'white',\r\n        width: '250px',\r\n        height: '50px',\r\n        borderRadius: '5px',\r\n        fontSize: '1em',\r\n        border: 'none',\r\n        transition: '1s',\r\n        fontWeight: 'bold',\r\n        textTransform: 'uppercase',\r\n\r\n        '&:hover': {\r\n            backgroundColor: '#ff6500',\r\n            transition: '1s',\r\n        },\r\n    },\r\n\r\n    fileUploadContainer: {\r\n        padding: '10px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        width: '80%',\r\n    },\r\n    fileUploadWrapper: {\r\n        flex: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    fileUpload: {\r\n        height: '60px',\r\n        backgroundColor: 'white',\r\n        border: 'none',\r\n    }\r\n})","import React, { useState } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\nimport { useStyles } from '../style'\r\nimport { Button, Input } from '@material-ui/core';\r\n\r\nconst Compile = () => {\r\n\r\n  const [fileA, setFileA] = useState({})\r\n  const [fileB, setFileB] = useState({})\r\n\r\n  const [q, setQs] = useState({})\r\n  const [titleColumn, setTitleColumn] = useState(\"\")\r\n\r\n  const classes = useStyles()\r\n\r\n  const excelReader = (data, isFirstFile) => {\r\n    let renderedData = XLSX.read(data, { type: 'binary' });\r\n    const dataParse = XLSX.utils.sheet_to_json(renderedData.Sheets[renderedData.SheetNames[0]], { header: 1 });\r\n\r\n    setTitleColumn(dataParse[0][0])\r\n\r\n    for (let i = 1; i < dataParse[0].length; i++) {\r\n      let key = parseInt(dataParse[0][i])\r\n      if (!(key in q))\r\n        q[key] = 1\r\n    }\r\n\r\n    setQs(q)\r\n\r\n    let fileDict = {}\r\n\r\n    for (let i = 1; i < dataParse.length; i++) {\r\n      let partName = dataParse[i][0]\r\n\r\n      let priceQuantity = {}\r\n      for (let j = 1; j < dataParse[i].length; j++) {\r\n        let quantity = parseInt(dataParse[0][j])\r\n        let value = dataParse[i][j]\r\n        priceQuantity[quantity] = value\r\n      }\r\n\r\n      fileDict[partName] = priceQuantity\r\n    }\r\n\r\n    delete fileDict[undefined]\r\n    isFirstFile ? setFileA(fileDict) : setFileB(fileDict)\r\n  }\r\n\r\n  const onFileChange = (e, isFirstFile) => {\r\n    e.preventDefault();\r\n    var files = e.target.files, f = files[0];\r\n    var reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      excelReader(e.target.result, isFirstFile)\r\n    };\r\n    reader.readAsBinaryString(f)\r\n  }\r\n\r\n  const downloadFile = () => {\r\n    // compare 2 files and take lowest value\r\n    if (Object.keys(fileB).length !== 0) {\r\n      let fileAKeys = Object.keys(fileA)\r\n      let fileBKeys = Object.keys(fileB)\r\n      let combined = fileAKeys.concat(fileBKeys)\r\n\r\n      let uniqueItems = [...new Set(combined)]\r\n\r\n      let quantities = Object.keys(q)\r\n\r\n      for (let i = 0; i < uniqueItems.length; i++) {\r\n        let individualItemPrice = {}\r\n        /* Item does not exist in File A but exits in File B */\r\n        if (fileA[uniqueItems[i]] === undefined) {\r\n          for (let j = 0; j < quantities.length; j++) {\r\n            individualItemPrice[quantities[j]] = fileB[uniqueItems[i]][quantities[j]]\r\n          }\r\n        }\r\n        /* Item does not exist in File B but exits in File A */\r\n        else if (fileB[uniqueItems[i]] === undefined) {\r\n          for (let j = 0; j < quantities.length; j++) {\r\n            individualItemPrice[quantities[j]] = fileA[uniqueItems[i]][quantities[j]]\r\n          }\r\n        }\r\n        /* Item Exists in both */\r\n        else {\r\n          for (let j = 0; j < quantities.length; j++) {\r\n            let A = fileA[uniqueItems[i]]\r\n            let B = fileB[uniqueItems[i]]\r\n\r\n            if (A[quantities[j]] === undefined) {\r\n              individualItemPrice[quantities[j]] = B[quantities[j]]\r\n            } else if (B[quantities[j]] === undefined) {\r\n              individualItemPrice[quantities[j]] = A[quantities[j]]\r\n            } else {\r\n              individualItemPrice[quantities[j]] = A[quantities[j]] < B[quantities[j]] ? A[quantities[j]] : B[quantities[j]]\r\n            }\r\n          }\r\n        }\r\n\r\n        fileA[uniqueItems[i]] = individualItemPrice\r\n      }\r\n    }\r\n\r\n    /* Write and Download File */\r\n    let keys = Object.keys(fileA)\r\n    let wbData = []\r\n\r\n    let myHeader = ['MPN']\r\n\r\n    let pl = fileA[keys[0]]\r\n    for (let i = 0; i < Object.keys(pl).length; i++) {\r\n      myHeader.push(Object.keys(pl)[i])\r\n    }\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      let rowData = {}\r\n\r\n      /* Part Name */\r\n      rowData['MPN'] = keys[i]\r\n\r\n      /* Quantity - Prices */\r\n      let priceList = fileA[keys[i]]\r\n\r\n      let quantityArr = Object.keys(priceList)\r\n      let priceArr = Object.values(priceList)\r\n\r\n      for (let j = 0; j < quantityArr.length; j++) {\r\n        if (!isNaN(parseFloat(priceArr[j]))) {\r\n          rowData[quantityArr[j]] = priceArr[j] * q[quantityArr[j]]\r\n        }\r\n      }\r\n      wbData.push(rowData)\r\n    }\r\n\r\n    const ws = XLSX.utils.json_to_sheet(wbData, { header: myHeader })\r\n    let wb = { Sheets: { 'data': ws }, SheetNames: ['data'] }\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const dd = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n    FileSaver.saveAs(dd, 'Data.xlsx');\r\n  }\r\n\r\n  const updateMultiplier = (mult, value) => {\r\n    let tmp = JSON.parse(JSON.stringify(q))\r\n    if (mult.toString().length === 0) {\r\n      tmp[value] = 1\r\n      setQs(tmp)\r\n    } else {\r\n      tmp[value] = parseFloat(mult)\r\n      setQs(tmp)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <span className={classes.label} style={{ fontSize: '30px', marginBottom: '30px' }}>\r\n        Upload Excel Files Here\r\n      </span>\r\n      <div className={classes.fileUploadContainer} style={{ flexDirection: 'row', width: '40%' }}>\r\n        <div className={classes.fileUploadWrapper}>\r\n          <span className={classes.label}>File 1</span>\r\n          <Input onChange={(event) => onFileChange(event, true)} type=\"file\" className={classes.fileUpload} />\r\n        </div>\r\n        <div className={classes.fileUploadWrapper}>\r\n          <span className={classes.label}>File 2</span>\r\n          <Input onChange={(event) => onFileChange(event, false)} type=\"file\" disabled={Object.keys(fileA).length === 0} className={classes.fileUpload} />\r\n        </div>\r\n      </div>\r\n      <section className={classes.fileUploadContainer}>\r\n        <span className={classes.label}>\r\n          Mark Up Value <span style={{ color: 'red', fontSize: '13px' }}>(numbers/ decimal only)</span>\r\n        </span>\r\n        <div className={Object.keys(q).length !== 0 && classes.inputWrapper}>\r\n          {\r\n            Object.keys(q).map((value) => {\r\n              return (\r\n                <div key={value} className={classes.input}>\r\n                  <label style={{ paddingRight: '10px' }}>\r\n                    Q - {value}\r\n                  </label>\r\n                  <input type=\"number\" onChange={(e) => updateMultiplier(e.target.value, value)} value={q[value]} />\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n        {\r\n          Object.keys(q).length === 0 &&\r\n          <div>\r\n            <h4 style={{ color: \"#333333\", textTransform: \"uppercase\" }}>[Multiplier fields will display once file is uploaded]</h4>\r\n          </div>\r\n        }\r\n        <button onClick={() => downloadFile()} className={classes.download} disabled={Object.keys(fileA).length === 0}>\r\n          Download\r\n        </button>\r\n      </section>\r\n      <div style={{ justifyContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'column' }}>\r\n        <h3>Your Uploaded File <span style={{ fontWeight: 'bold', color: 'red', fontSize: '20px' }}>MUST</span> follow the following format: </h3>\r\n        <img alt=\"Sample Format\" src={require('../assets/Format.png')} width={\"80%\"} style={{ borderRadius: \"10px\" }} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Compile;\r\n","import React, { useState } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\nimport { useStyles } from '../style'\r\nimport { Input } from '@material-ui/core';\r\n\r\nconst Compare = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    // initialize defaulr variables\r\n    const [exchange, setExchange] = useState({\r\n        EURO: 1,\r\n        USD: 1\r\n    })\r\n\r\n    // will contain mark-up % & handling charges (USD)\r\n    const [quantities, setQuantities] = useState({})\r\n\r\n    // stock items to write to file\r\n    const [stock, setStock] = useState({})\r\n\r\n    const parseStockAvailbleFile = (data) => {\r\n        let renderedData = XLSX.read(data, { type: 'binary' });\r\n        const dataParse = XLSX.utils.sheet_to_json(renderedData.Sheets[renderedData.SheetNames[0]], { header: 1 });\r\n\r\n        setExchange({\r\n            EURO: dataParse[3][2],\r\n            USD: dataParse[4][2]\r\n        })\r\n        for (let i = 2; i < dataParse[0].length; i++) {\r\n            let quantity = parseInt(dataParse[0][i])\r\n            if (!(quantity in quantities))\r\n                quantities[quantity] = {\r\n                    handlingCharge: dataParse[1][i],\r\n                    markUp: dataParse[2][i]\r\n                }\r\n        }\r\n        for (let i = 7; i < dataParse.length; i++) {\r\n            if (dataParse[i][1] === undefined)\r\n                break\r\n            const mpn = dataParse[i][1]\r\n            const brand = dataParse[i][2]\r\n            const qty = dataParse[i][3]\r\n            const remarks = dataParse[i][4] === undefined ? '' : dataParse[i][4]\r\n            if (qty != 0) {\r\n                stock[mpn] = {\r\n                    brand,\r\n                    qty,\r\n                    remarks\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const parseOpenPoPriceList = (data) => {\r\n        let renderedData = XLSX.read(data, { type: 'binary' });\r\n        const dataParse = XLSX.utils.sheet_to_json(renderedData.Sheets[renderedData.SheetNames[0]], { header: 1 });\r\n        for (let i = 1; i < dataParse.length; i++) {\r\n            if (dataParse[i][1] === undefined)\r\n                break\r\n            const mpn = dataParse[i][0]\r\n            const opoCurr = dataParse[i][1]\r\n            const opoPrice = dataParse[i][2]\r\n            const opoDate = excelDateToJSDate(dataParse[i][3])\r\n\r\n            if (mpn in stock) {\r\n                // check for existing entry (check for date key)\r\n                if (stock[mpn]['opoDate'] != null) {\r\n                    // compare date\r\n                    if ((stock[mpn]['opoDate'] === opoDate.getTime() && (stock[mpn]['opoPrice'] * exchange[stock[mpn]['opoCurr']] < opoPrice * exchange[opoCurr])) || stock[mpn]['opoDate'] < opoDate.getTime()) {\r\n                        // replace existing item\r\n                        stock[mpn] = {\r\n                            ...stock[mpn],\r\n                            opoCurr,\r\n                            opoPrice,\r\n                            opoDate\r\n                        }\r\n                    }\r\n                } else {\r\n                    // set item\r\n                    stock[mpn] = {\r\n                        ...stock[mpn],\r\n                        opoCurr,\r\n                        opoPrice,\r\n                        opoDate\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const parseGoodsReceivedPriceList = (data) => {\r\n        let renderedData = XLSX.read(data, { type: 'binary' });\r\n        const dataParse = XLSX.utils.sheet_to_json(renderedData.Sheets[renderedData.SheetNames[0]], { header: 1 });\r\n        for (let i = 1; i < dataParse.length; i++) {\r\n            if (dataParse[i][1] === undefined)\r\n                break\r\n            const mpn = dataParse[i][1]\r\n            const grCurr = dataParse[i][2]\r\n            const grPrice = dataParse[i][3]\r\n            const grDate = excelDateToJSDate(dataParse[i][0])\r\n\r\n            if (mpn in stock) {\r\n                // check for existing entry (check for date key)\r\n                if (stock[mpn]['grDate'] != null) {\r\n                    // compare date\r\n                    if ((stock[mpn]['grDate'] === grDate.getTime() && (stock[mpn]['grPrice'] * exchange[stock[mpn]['grCurr']] < grPrice * exchange[grCurr])) || stock[mpn]['grDate'] < grDate.getTime()) {\r\n                        // replace existing item\r\n                        stock[mpn] = {\r\n                            ...stock[mpn],\r\n                            grCurr,\r\n                            grPrice,\r\n                            grDate\r\n                        }\r\n                    }\r\n                } else {\r\n                    // set item\r\n                    stock[mpn] = {\r\n                        ...stock[mpn],\r\n                        grCurr,\r\n                        grPrice,\r\n                        grDate\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const onFileChange = (e, fileNo) => {\r\n        e.preventDefault();\r\n        var files = e.target.files, f = files[0];\r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            if (fileNo === 1)\r\n                parseStockAvailbleFile(e.target.result)\r\n            else if (fileNo === 2)\r\n                parseOpenPoPriceList(e.target.result)\r\n            else\r\n                parseGoodsReceivedPriceList(e.target.result)\r\n        };\r\n        reader.readAsBinaryString(f)\r\n    }\r\n\r\n    const excelDateToJSDate = (serial) => {\r\n        var utc_days = Math.floor(serial - 25569);\r\n        var utc_value = utc_days * 86400;\r\n        var date_info = new Date(utc_value * 1000);\r\n        return new Date(date_info.getFullYear(), date_info.getMonth(), date_info.getDate());\r\n    }\r\n\r\n    const downloadFile = () => {\r\n\r\n        /* Write and Download File */\r\n        let workbookRows = []\r\n        let mpns = Object.keys(stock)\r\n        let myHeader = ['Line', 'MPN', 'Brand', 'Stock', 'Curr (GR)', 'Price (GR)', 'Curr (OPO)', 'Price (OPO)']\r\n        for (let i = 0; i < Object.keys(quantities); i++) {\r\n            myHeader.push(Object.keys(quantities)[i])\r\n        }\r\n\r\n        for (let i = 0; i < mpns.length; i++) {\r\n            let row = {}\r\n            let mpn = mpns[i]\r\n            row['Line'] = i + 1\r\n            row['MPN'] = mpn\r\n            row['Brand'] = stock[mpn]['brand']\r\n            row['Stock'] = stock[mpn]['qty']\r\n            row['Curr (GR)'] = stock[mpn]['grCurr']\r\n            row['Price (GR)'] = stock[mpn]['grPrice']\r\n            row['Curr (OPO)'] = stock[mpn]['opoCurr']\r\n            row['Price (OPO)'] = stock[mpn]['opoPrice']\r\n\r\n            let grPriceUSD = stock[mpn]['grPrice'] * exchange[stock[mpn]['grCurr']]\r\n            let opoPriceUSD = stock[mpn]['opoPrice'] * exchange[stock[mpn]['opoCurr']]\r\n\r\n            // loop and add quantity + calculate unit price\r\n            let highestPrice = grPriceUSD > opoPriceUSD ? grPriceUSD : opoPriceUSD\r\n\r\n            for (let j = 0; j < Object.keys(quantities).length; j++) {\r\n                let quantity = Object.keys(quantities)[j]\r\n                let markUp = quantities[quantity]['markUp']\r\n                let handlingCharge = quantities[quantity]['handlingCharge']\r\n\r\n                // Formula: [Unit Price + Unit price x (Mark Up% / 100)+Handling Charges] x QTY Break ]x ForEx / QTY Break\r\n                let unitPrice = (((1 + markUp * 1.0 / 100) * highestPrice) * quantity + handlingCharge) / quantity\r\n                row[quantity] = isNaN(unitPrice) ? '-' : unitPrice\r\n            }\r\n            workbookRows.push(row)\r\n        }\r\n\r\n        console.log(myHeader)\r\n        const ws = XLSX.utils.json_to_sheet(workbookRows, { header: myHeader })\r\n        let wb = { Sheets: { 'data': ws }, SheetNames: ['data'] }\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const dd = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n        FileSaver.saveAs(dd, 'Data.xlsx');\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <span className={classes.label} style={{ fontSize: '30px', marginBottom: '30px' }}>\r\n                Upload Excel Files Here\r\n            </span>\r\n            <div className={classes.fileUploadContainer} style={{ flexDirection: 'row', width: '60%' }}>\r\n                <div className={classes.fileUploadWrapper} style={{ width: '30%' }}>\r\n                    <span className={classes.label}>Stock Available</span>\r\n                    <Input onChange={(event) => onFileChange(event, 1)} type=\"file\" className={classes.fileUpload} />\r\n                </div>\r\n                <div className={classes.fileUploadWrapper} style={{ width: '30%' }}>\r\n                    <span className={classes.label}>OpenPoPriceList</span>\r\n                    <Input onChange={(event) => onFileChange(event, 2)} type=\"file\" className={classes.fileUpload} />\r\n                </div>\r\n                <div className={classes.fileUploadWrapper} style={{ width: '30%' }}>\r\n                    <span className={classes.label}>GoodsReceivedPriceList</span>\r\n                    <Input onChange={(event) => onFileChange(event, 3)} type=\"file\" className={classes.fileUpload} />\r\n                </div>\r\n            </div>\r\n            <div style={{ marginTop: '50px' }}>\r\n                <button onClick={() => downloadFile()} className={classes.download}>\r\n                    Download\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Compare;","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Compile from './views/compile'\nimport Compare from './views/compare'\nimport { AppBar, IconButton, Typography, Toolbar } from '@material-ui/core';\nimport { useStyles } from './style'\n\nconst App = () => {\n\n  const classes = useStyles()\n\n  return (\n    <Router>\n      <AppBar position=\"static\" style={{ backgroundColor: 'darkorange' }}>\n        <Toolbar>\n          <Typography className={classes.label} noWrap style={{ fontSize: '22px' }}>\n            Wiselink Excel Automation\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.linkContainer}>\n            <Link to={'/excel-automation'} className={classes.link}>Compile</Link>\n            <Link to={'/excel-automation/compare'} className={classes.link}>Compare</Link>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Switch>\n        <Route exact path='/excel-automation' component={Compile} />\n        <Route path='/excel-automation/compare' component={Compare} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}